"use client";

import { User } from '@/lib/auth-service';
import { UploadedFile } from '@/lib/file-service';
import { NotificationStatus } from '@/lib/notification-service';

interface OverviewProps {
  user: User | null;
  files: UploadedFile[];
  orderedFiles: UploadedFile[];
  lastAssistantReply: string;
  notificationStatus: NotificationStatus;
  stats: {
    totalDocuments: number;
    totalBytes: string;
    departments: number;
    latestUpload: string;
  };
}

function formatBytes(bytes: number): string {
  if (!bytes) return '0 KB';
  const units = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
  const index = Math.min(Math.floor(Math.log(bytes) / Math.log(1024)), units.length - 1);
  const value = bytes / Math.pow(1024, index);
  return `${value < 10 && index > 0 ? value.toFixed(1) : Math.round(value)} ${units[index]}`;
}

function formatDateTime(value: string | Date): string {
  const date = value instanceof Date ? value : new Date(value);
  return date.toLocaleString();
}

export default function Overview({ 
  user, 
  files, 
  orderedFiles, 
  lastAssistantReply, 
  notificationStatus, 
  stats 
}: OverviewProps) {
  return (
    <section className="section-stack">
      <div className="grid grid--three">
        <div className="stat-card">
          <span className="stat-card__label">Documents in workspace</span>
          <span className="stat-card__value">{stats.totalDocuments}</span>
          <div className="stat-card__meta">
            <span className="badge">{stats.departments} departments</span>
            <span className="stat-card__trend">Active</span>
          </div>
        </div>
        <div className="stat-card">
          <span className="stat-card__label">Storage footprint</span>
          <span className="stat-card__value">{stats.totalBytes}</span>
          <div className="stat-card__meta">
            <span className="badge badge--success">Optimized</span>
            <span>Tracked across Firebase</span>
          </div>
        </div>
        <div className="stat-card">
          <span className="stat-card__label">Last activity</span>
          <span className="stat-card__value" style={{ fontSize: '1.25rem' }}>{stats.latestUpload}</span>
          <div className="stat-card__meta">
            <span className={`status-pill ${notificationStatus.isSubscribed ? 'success' : 'warning'}`}>
              {notificationStatus.isSubscribed ? 'Notifications enabled' : 'Subscribe to topics'}
            </span>
          </div>
        </div>
      </div>

      <div className="grid grid--two">
        <div className="panel">
          <div className="panel__header">
            <div>
              <h3 className="panel__title">Latest uploads</h3>
              <p className="panel__description">Files synced from your recent sessions</p>
            </div>
          </div>
          {orderedFiles.length ? (
            <div className="file-grid">
              {orderedFiles.slice(0, 6).map((item) => (
                <div key={item.id} className="file-card">
                  <div className="file-card__title">{item.originalName || item.name}</div>
                  <div className="file-card__meta">
                    <span>Size • {formatBytes(item.size)}</span>
                    <span>Department • {item.department || 'general'}</span>
                    <span>Uploaded • {formatDateTime(item.createdAt)}</span>
                  </div>
                  <div className="chip">By {item.uploadedBy || user?.email}</div>
                </div>
              ))}
            </div>
          ) : (
            <p className="section-description">No documents uploaded yet. Start by uploading your first file from the Files section.</p>
          )}
        </div>

        <div className="panel">
          <div className="panel__header">
            <div>
              <h3 className="panel__title">AI assistant insights</h3>
              <p className="panel__description">Latest response generated by Gemini for your team</p>
            </div>
          </div>
          {lastAssistantReply ? (
            <div className="chat-message chat-message--assistant" style={{ maxWidth: '100%' }}>
              <span className="chat-message__meta">Latest response</span>
              <span>{lastAssistantReply}</span>
            </div>
          ) : (
            <p className="section-description">Your AI assistant is ready. Ask a question from the AI Assistant workspace to see guidance here.</p>
          )}

          <div className="panel__header" style={{ marginTop: 'auto' }}>
            <div>
              <h4 className="panel__title" style={{ fontSize: '1rem' }}>Notification status</h4>
              <p className="panel__description">Push delivery handled via Firebase Cloud Messaging</p>
            </div>
            <span className={`status-pill ${notificationStatus.isSubscribed ? 'success' : 'warning'}`}>
              {notificationStatus.isSupported ? (notificationStatus.isSubscribed ? 'Subscribed' : 'Pending consent') : 'Unsupported'}
            </span>
          </div>
        </div>
      </div>
    </section>
  );
}